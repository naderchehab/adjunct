!function(){"use strict";var a={backspace:8,tab:9,enter:13,escape:27,space:32,up:38,down:40,comma:188};angular.module("tags-input",[]),angular.module("tags-input").directive("tagsInput",["$interpolate",function(b){function c(a,c){function d(d,e){return c[d]?b(c[d])(a.$parent):e}function e(a,b){var c=d(a,null);return c?parseInt(c,10):b}function f(a,b){var c=d(a,null);return c?"true"===c:b}a.options={cssClass:d("ngClass",""),placeholder:d("placeholder","Add a tag"),tabindex:e("tabindex",""),removeTagSymbol:d("removeTagSymbol",String.fromCharCode(215)),replaceSpacesWithDashes:f("replaceSpacesWithDashes",!0),minLength:e("minLength",3),maxLength:e("maxLength",""),addOnEnter:f("addOnEnter",!0),addOnSpace:f("addOnSpace",!1),addOnComma:f("addOnComma",!0),allowedTagsPattern:new RegExp(d("allowedTagsPattern","^[a-zA-Z0-9\\s]+$")),enableEditingLastTag:f("enableEditingLastTag",!1)}}function d(){var a={};return{on:function(b,c){a[b]||(a[b]=[]),a[b].push(c)},trigger:function(b,c){angular.forEach(a[b],function(a){a(c)})}}}return{restrict:"A,E",scope:{tags:"=ngModel",onTagAdded:"&",onTagRemoved:"&"},replace:!1,transclude:!0,template:'<div class="ngTagsInput {{ options.cssClass }}" ng-transclude>  <div class="tags">    <ul>      <li ng-repeat="tag in tags" ng-class="getCssClass($index)">        <span>{{ tag }}</span>        <button type="button" ng-click="remove($index)">{{ options.removeTagSymbol }}</button>      </li>    </ul>    <input type="text"           placeholder="{{ options.placeholder }}"           size="{{ options.placeholder.length }}"           maxlength="{{ options.maxLength }}"           tabindex="{{ options.tabindex }}"           ng-model="newTag"           ng-change="newTagChange()">  </div></div>',controller:["$scope","$attrs","$element",function(a,b,e){var f,g=new d;c(a,b),g.on("tag-added",a.onTagAdded),g.on("tag-removed",a.onTagRemoved),a.newTag="",a.tags=a.tags||[],a.tryAdd=function(){var b=!1,c=a.newTag;return c.length>=a.options.minLength&&a.options.allowedTagsPattern.test(c)&&(a.options.replaceSpacesWithDashes&&(c=c.replace(/\s/g,"-")),-1===a.tags.indexOf(c)&&(a.tags.push(c),g.trigger("tag-added",{$tag:c})),a.newTag="",b=!0),b},a.tryRemoveLast=function(){var b=!1;return a.tags.length>0&&(a.options.enableEditingLastTag?a.newTag=a.remove(a.tags.length-1):f?(a.remove(a.tags.length-1),f=!1):f=!0,b=!0),b},a.remove=function(b){var c=a.tags.splice(b,1)[0];return g.trigger("tag-removed",{$tag:c}),c},a.getCssClass=function(b){var c=b===a.tags.length-1;return f&&c?"selected":""},a.$watch(function(){return a.newTag.length>0},function(){f=!1}),a.newTagChange=angular.noop,this.registerAutocomplete=function(){var b=e.find("input");return b.changeValue=function(b){a.newTag=b},b.change=function(b){a.newTagChange=function(){b(a.newTag)}},{input:b,events:g}}}],link:function(b,c){var d=[a.enter,a.comma,a.space,a.backspace],e=c.find("input");e.bind("keydown",function(c){var e;c.isImmediatePropagationStopped&&c.isImmediatePropagationStopped()||-1!==d.indexOf(c.keyCode)&&(e=c.keyCode,e===a.enter&&b.options.addOnEnter||e===a.comma&&b.options.addOnComma||e===a.space&&b.options.addOnSpace?(b.tryAdd()&&b.$apply(),c.preventDefault()):e===a.backspace&&0===this.value.length&&b.tryRemoveLast()&&(b.$apply(),c.preventDefault()))}),c.find("div").bind("click",function(){e[0].focus()})}}}]),angular.module("tags-input").directive("autocomplete",["$document",function(b){function c(a){var b={};return b.reset=function(){b.items=[],b.visible=!1,b.index=-1,b.selected=null},b.show=function(){b.selected=null,b.visible=!0},b.hide=function(){b.visible=!1},b.load=function(c){b.selected!==c&&a(c).then(function(a){b.items=a,a.length>0&&b.show()})},b.selectNext=function(){b.select(++b.index)},b.selectPrior=function(){b.select(--b.index)},b.select=function(a){0>a?a=b.items.length-1:a>=b.items.length&&(a=0),b.index=a,b.selected=b.items[a]},b.reset(),b}return{restrict:"A,E",require:"?^tagsInput",scope:{source:"&"},template:'<div class="autocomplete" ng-show="suggestionList.visible">  <ul class="suggestions">    <li class="suggestion" ng-repeat="item in suggestionList.items"                           ng-class="{selected: item == suggestionList.selected}"                           ng-click="addSuggestion()"                           ng-mouseenter="suggestionList.select($index)">{{ item }}</li>  </ul></div>',link:function(d,e,f,g){var h=[a.enter,a.tab,a.escape,a.up,a.down],i=new c(d.source()),j=g.registerAutocomplete(),k=j.input;d.suggestionList=i,d.addSuggestion=function(){var a=!1;return i.selected&&(k.changeValue(i.selected),i.reset(),k[0].focus(),a=!0),a},k.change(function(a){a?i.load(a):i.reset()}),k.bind("keydown",function(b){var c,e;if(-1!==h.indexOf(b.keyCode)){var f=!1;b.stopImmediatePropagation=function(){f=!0,b.stopPropagation()},b.isImmediatePropagationStopped=function(){return f},i.visible&&(c=b.keyCode,e=!1,c===a.down?(i.selectNext(),e=!0):c===a.up?(i.selectPrior(),e=!0):c===a.escape?(i.reset(),e=!0):(c===a.enter||c===a.tab)&&(e=d.addSuggestion()),e&&(b.preventDefault(),b.stopImmediatePropagation(),d.$apply()))}}),b.bind("click",function(){i.visible&&(i.reset(),d.$apply())}),j.events.on("tag-added",function(){i.reset()})}}}])}();